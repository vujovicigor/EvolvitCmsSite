<!DOCTYPE html>
<html lang="en">
<head>
  <base href="{{_BASE}}">
  <title>EvolvitCMS google auth</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="EvolvitCMS google auth"/>
  <meta name="keywords" content="Self hosted CMS EvolvitCMS Playground">

  <link rel="apple-touch-icon" sizes="180x180" href="favicon/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="favicon/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="favicon/favicon-16x16.png">
  <link rel="manifest" href="favicon/site.webmanifest">
  <link rel="mask-icon" href="favicon/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="theme-color" content="#ffffff">
  <meta name="google-signin-client_id" content="1059878098248-ug4kn2qe72tv2a3vfnjv739phs89615a.apps.googleusercontent.com">

  <script src="https://apis.google.com/js/platform.js" async defer></script>
  <link href="https://fonts.googleapis.com/css2?family=Fira+Sans:wght@300;400&display=swap" rel="stylesheet">
</head>
<body style="margin:0; padding:0;">

    <div class="g-signin2" data-onsuccess="onSignIn" style="display: inline-block;"></div>

<!--    <a href="#" onclick="signOut();">Sign out</a> -->

<script src="js/js.cookie.min.js"></script>
<script>
  document.domain = "evolvitcms.com";
  function onSignIn(googleUser) {
    var profile = googleUser.getBasicProfile();
    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
    console.log('Name: ' + profile.getName());
    console.log('Image URL: ' + profile.getImageUrl());
    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.
    
    postMsg({namespace:'signin', data:{isSignedIn:true, email:profile.getEmail()}},'*')
    
    var id_token = googleUser.getAuthResponse().id_token;
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'auth/googletokensignin.php');
    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    xhr.onload = function() {
      //console.log('Signed in as: ' + xhr.responseText);
      try{
        GoogleUserData =  JSON.parse(xhr.responseText)
        console.log('server resp:', GoogleUserData)
      }
      catch(e){
        console.log('Bad verification response', e)
      }
    };
    xhr.send('idtoken=' + id_token);

  }


  function signOut() {
    var auth2 = gapi.auth2.getAuthInstance();
    auth2.signOut().then(function () {
      console.log('User signed out.');
      postMsg({namespace:'signin', data:{isSignedIn:true, email:profile.getEmail()}},'*')
    });
  }

  function authcb(obj){
    for (var i=0; i<obj.length; i++){
      console.log(obj[i])
    //  Cookies.set('name', 'value', { domain: '.evolvitcms.com' })
    }
  }


// postmessagepromise util
  var postMsg = window.parent.postMessage
  let __seq = 0
  function postMessagePromise(msg){
    return new Promise(function(resolve, reject) {
      let seq = ++__seq;

      let event_ref = window.addEventListener("message", function(resp){
        if (resp && resp.data && resp.data.__seq && resp.data.__seq == seq){
          window.removeEventListener("message", event_ref)
          resolve(resp.data)
        }
      }, false);

      postMsg({...msg, __seq:seq}, '*')
    });
  }
  window.postMessagePromise = postMessagePromise


  function receiveMessage(e){
    console.log('frejm dobio',e )
    if (e && e.data && e.data.__seq){
      console.log('iz gfrejma saljem postmsg',e )

      if (e.data.namespace=='PlaygroundProjectsAdd'){
        fetch('cms/api.php?query=PlaygroundProjectsAdd', {
          credentials:'same-origin',
          method: 'POST',
          body: JSON.stringify(e.data)
        })
        .then(response => response.json())
        .then(data => {
          console.log(data)
          e.source.postMessage({data:data, __seq:e.data.__seq}, '*');
        });
        return
      }

      if(e.data.namespace=='isSignedIn'){
        var isSignedIn = gapi.auth2.getAuthInstance().isSignedIn.get()
        var email = null;
        if (isSignedIn) 
          email = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail()

        console.log('iz gfrejma saljem isSignedIn',email, isSignedIn )
        e.source.postMessage({data:{ isSignedIn:isSignedIn, email:email }, __seq:e.data.__seq}, '*');
        return
      }
      if (e.data.namespace=='gapi.auth2.getAuthInstance().signIn()'){
        gapi.auth2.getAuthInstance().signIn()
        .then((r)=> {
          var isSignedIn = gapi.auth2.getAuthInstance().isSignedIn.get()
          var email = null;
          if (isSignedIn) 
            email = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail()
          e.source.postMessage({data:{ isSignedIn:isSignedIn, email:email }, __seq:e.data.__seq}, '*');
        })
        .catch((e)=> {
          e.source.postMessage({data:{ isSignedIn:false, email:null }, __seq:e.data.__seq}, '*');
        })
        return
      }
      //e.source.postMessage({tip:'projects', lista:[], __seq:e.data.__seq}, '*');
      // do 
    }
   /* 
      if (e.data == 'hello') {
          alert('ok from iframe');
          return
      }
      if (e.data && e.data.tip == 'projects') {
          postMsg({tip:'projects', lista:[]}, '*');
          return
      }
      */
  };
  var isSignedIn = gapi.auth2.getAuthInstance().isSignedIn.get()
  console.log('frame isSignedIn', isSignedIn)

  window.addEventListener("message", receiveMessage, false);

</script>
</body>
</html>




